<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE alfs SYSTEM "../DTD/ALFS.dtd"
[
<!ENTITY % general_entities SYSTEM "../config/general.ent">
<!ENTITY % package_entities SYSTEM "../config/packages/ch22.ent">
<!ENTITY % config_entities SYSTEM  "../config/config.ent">
<!ENTITY % files SYSTEM "../config/files.ent">

%general_entities;
%package_entities;
%config_entities;
%files;

<!ENTITY bootscripts-get SYSTEM "../config/bootscripts_get.ent">
<!ENTITY bootscripts-clean SYSTEM "../config/bootscripts_clean.ent">

]>
<alfs>
  <package name="bind" version="&bind-version;">
    <packageinfo>
      <utilizes>
	<name>openssl</name>
      </utilizes>
      <utilizes>
      	<name>net-tools</name>
      </utilizes>
      <utilizes>
	<name>Net-DNS</name>
      </utilizes>
      <utilizes>
	<name>openjade</name>
      </utilizes>
      <utilizes>
	<name>jadetex</name>
      </utilizes>
      <utilizes>
	<name>docbook-dsssl</name>
      </utilizes>
    </packageinfo>
    <stage name="Unpacking">
      <unpack>
        <archive>&packages_dir;/&bind-package;</archive>
        <destination>&build_dir;</destination>
      </unpack>
    </stage>
    &bootscripts-get;
    <stage name="Creating user and group">
      <execute command="getent group named &gt; /dev/null || groupadd">
        <param>named</param>
      </execute>
      <execute command="getent passwd named &gt; /dev/null || useradd">
        <param>-c named</param>
        <param>-m</param>
        <param>-g named</param>
        <param>-s /bin/false</param>
        <param>named</param>
      </execute>
    </stage>
    <stage name="Installing">
      <stageinfo>
        <base>&build_dir;/&bind-directory;</base>
      </stageinfo>
      <configure>
        <param>--prefix=/usr</param>
        <param>--sysconfdir=/etc</param>
	<param>--enable-threads</param>
	<param>--with-libtool</param>
      </configure>
      <make />
      <make>
        <param>install</param>
      </make>
      <permissions mode="755" base="/usr/lib">
	<name>libbind9.so.*</name>
	<name>libisc.so.*</name>
	<name>libisccc.so.*</name>
	<name>libisccfg.so.*</name>
	<name>liblwres.so.*</name>
	<name>libdns.so.20.0.0</name>
      </permissions>
      <move base="/usr/share/man">
	<source>man8/named.conf</source>
	<destination>man5</destination>
      </move>
      <mkdir>
	<option>parents</option>
	<name>/usr/share/doc/bind-&bind-version;</name>
      </mkdir>
      <mkdir base="/usr/share/doc/bind-&bind-version;">
	<option>parents</option>
	<name>arm</name>
	<name>draft</name>
	<name>misc</name>
	<name>rfc</name>
      </mkdir>
      <copy base="&build_dir;/&bind-directory;/doc">
	<source>arm/*.html</source>
	<destination>/usr/share/doc/bind-&bind-version;/arm</destination>
      </copy>
      <copy base="&build_dir;/&bind-directory;/doc">
	<source>draft/*.txt</source>
	<destination>/usr/share/doc/bind-&bind-version;/draft</destination>
      </copy>
      <copy base="&build_dir;/&bind-directory;/doc">
	<source>rfc/*</source>
	<destination>/usr/share/doc/bind-&bind-version;/rfc</destination>
      </copy>
      <copy base="&build_dir;/&bind-directory;/doc">
	<source>misc/dnssec</source>
	<source>misc/ipv6</source>
	<source>misc/migrat*</source>
	<source>misc/options</source>
	<source>misc/rfc-compliance</source>
	<source>misc/roadmap</source>
	<source>misc/sdb</source>
	<destination>/usr/share/doc/bind-&bind-version;/misc</destination>
      </copy>

    </stage>
    <stage name="Configuring chroot environment">
      <stageinfo>
        <base>/home/named</base>
      </stageinfo>
      <mkdir>
        <option>parents</option>
        <name>dev</name>
        <name>etc/namedb/slave</name>
        <name>var/run</name>
      </mkdir>
      <execute command="mknod">
        <param>dev/null</param>
        <param>c 1 3</param>
      </execute>
      <execute command="mknod">
        <param>dev/random</param>
        <param>c 1 8</param>
      </execute>
      <permissions mode="666">
        <name>dev/null</name>
        <name>dev/random</name>
      </permissions>
      <mkdir>
        <option>parents</option>
        <name>etc/namedb/pz</name>
      </mkdir>
      <copy>
        <source>/etc/localtime</source>
        <destination>etc</destination>
      </copy>
    </stage>
    <stage name="Configuring bind">
      <textdump>
        <file>/home/named/etc/named.conf</file>
        <content>
	  = options {
	  =   directory "/etc/namedb";
	  =   pid-file "/var/run/named.pid";
	  =   statistics-file "/var/run/named.stats";
	  =
	  = };
	  = controls {
	  =   inet 127.0.0.1 allow { localhost; } keys { rndc_key; };
	  = };
	</content>
      </textdump>
      <execute command="rndc-confgen">
	<param>-a -b 512</param>
	<param>-c key.tmp</param>
      </execute>
      <execute command="cat">
	<param>&gt;&gt; /home/named/etc/named.conf</param>
	<param>&lt; key.tmp</param>
      </execute>
      <textdump mode="append">
	<file>/home/named/etc/named.conf</file>
	<content>
	  = zone "." {
	  =   type hint;
	  =   file "root.hints";
	  = };
	  = zone "0.0.127.in-addr.arpa" {
	  =   type master;
	  =   file "pz/127.0.0";
	  = };
	  =
	  =// Bind 9 now logs by default through syslog (except debug).
	  =// These are the default logging rules.
	  =
	  =logging {
	  =     category default { default_syslog; default_debug; };
	  =     category unmatched { null; };
	  =
	  =  channel default_syslog {
	  =      syslog daemon;                      // send to syslog's daemon
	  =                                          // facility
	  =      severity info;                      // only send priority info
	  =                                          // and higher
	  =  };
	  =
	  =  channel default_debug {
	  =      file "named.run";                   // write to named.run in
	  =                                          // the working directory
	  =                                          // Note: stderr is used instead
	  =                                          // of "named.run"
	  =                                          // if the server is started
	  =                                          // with the '-f' option.
	  =      severity dynamic;                   // log at the server's
	  =                                          // current debug level
	  =  };
	  =
	  =  channel default_stderr {
	  =      stderr;                             // writes to stderr
	  =      severity info;                      // only send priority info
	  =                                          // and higher
	  =  };
	  =
	  =  channel null {
	  =     null;                                // toss anything sent to
	  =                                          // this channel
	  =  };
	  =};
	</content>
      </textdump>
      <execute command="cat">
	<param>&gt;&gt; /etc/rndc.conf</param>
	<param>&lt; key.tmp</param>
      </execute>
      <textdump mode="append">
        <file>/etc/rndc.conf</file>
        <content>
	  =options {
	  =    default-server localhost;
	  =    default-key    rndc_key;
	  =};
	</content>
      </textdump>
      <textdump>
        <file>/home/named/etc/namedb/pz/127.0.0</file>
        <content>
	  =$TTL 3D
	  =@	  IN	  SOA	    ns.local.domain.	  hostmaster.local.domain. ( 
	  =			      1	    ; Serial
	  =			      8H    ; Refresh
	  =			      2H    ; Retry
	  =			      4W    ; Expire
	  =			      1D)   ; Minimum TTL
	  =		    NS	    ns.local.domain.
	  =1		    PTR	    localhost.
	</content>
      </textdump>
      <copy base="&blfs-config;/named">
	<source>root.hints</source>
	<destination>/home/named/etc/namedb</destination>
      </copy>
      <copy base="/etc">
        <source>resolv.conf</source>
        <destination>resolv.conf.bak</destination>
      </copy>
      <textdump>
        <file>/etc/resolv.conf</file>
        <content>
	  =search &domain;
	  =nameserver 127.0.0.1
	</content>
      </textdump>
      <ownership user="named" group="named">
        <option>recursive</option>
        <name>/home/named</name>
      </ownership>
    </stage>
    <stage name="Installing bootscript and configuration">
      <stageinfo>
        <base>&build_dir;/&blfs-bootscripts-directory;</base>
      </stageinfo>
      <make>
        <param>install-bind</param>
      </make>
    </stage>
    &bootscripts-clean;
    <stage name="Cleanup">
      <remove>&build_dir;/&bind-directory;</remove>
    </stage>
  </package>
</alfs>
