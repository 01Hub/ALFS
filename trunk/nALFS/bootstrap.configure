#!/bin/bash
#
#  Bootstrap script for nALFS, used to get a CVS checkout ready for use.
#
#  Copyright (C) 2003
#
#  Kevin P. Fleming <kpfleming@linuxfromscratch.org>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

cat << "EOF"
AC_INIT(nALFS,CVS,[],nALFS)
AC_CONFIG_AUX_DIR([gnubuild])
AM_INIT_AUTOMAKE([foreign dist-bzip2 subdir-objects])
AM_MAINTAINER_MODE
AC_CONFIG_SRCDIR([src/nalfs.c])
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_LD
AM_ENABLE_SHARED
AM_DISABLE_STATIC
AC_LIBTOOL_TAGS([])
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL
LIBTOOL="${LIBTOOL} --silent"
AC_LIB_LTDL
AC_CONFIG_LIBCONFIG_IN_STATIC
NALFS_VERSION="${PACKAGE_VERSION}"
NALFS_LIBS="-lnALFS"
AC_CONFIG_LIBCONFIG_IN([nALFS])
AC_STDC_HEADERS
AC_CONFIG_HEADER([config.h])
AC_CHECK_LIB([form], [form_driver], [MAIN_LIBS="${MAIN_LIBS} -lform"])
AC_CHECK_LIB([ncurses], [initscr], [MAIN_LIBS="${MAIN_LIBS} -lncurses"])
AC_SUBST([MAIN_LIBS])
AM_CONDITIONAL(STATIC_BUILD, test x${enable_static} = xyes)
AS_IF([test x${enable_static} = xyes],
      [AC_DEFINE([STATIC_BUILD], [1], [Define if the application is being built as a static executable.])
       AC_CHECK_LIB([ncurses], [tputs], [], [tinfo_needed=yes], [-static])
       AS_IF([test x${tinfo_needed} = xyes], AC_CHECK_LIB([tinfo], [tputs], [MAIN_LIBS="${MAIN_LIBS} -ltinfo"]))
      ],
      [AC_DEFINE_DIR([HANDLERS_DIRECTORY], [libdir/nALFS], [Define to location where the handler shared plugin files are installed.])])

AC_ARG_ENABLE([inline], [AC_HELP_STRING([--enable-inline], [enable compiler inlining of most functions [[default=no]]])], [], [enable_inline=no])

case ${enable_inline} in
     n|no)
         inline_val=
         ;;
     y|ye|yes)
         inline_val=inline
         ;;
     *)
         echo "***"
         echo "*** Unknown --enable-inline value supplied: ${enable_inline}"
         exit 1
         ;;
esac

AC_DEFINE_UNQUOTED([INLINE], [$inline_val], [Define to "inline" to tell the compiler to inline most functions.])

AC_ARG_ENABLE([element-editor], [AC_HELP_STRING([--enable-element-editor], [enable editing of elements [[default=yes]]])], [], [enable_element_editor=no])

case ${enable_element_editor} in
     n|no)
         ;;
     y|ye|yes)
         AC_DEFINE([USE_EDITOR], [], [Define to allow editing of elements.])
         ;;
     *)
         echo "***"
         echo "*** Unknown --enable-element-editor value supplied: ${enable_element_editor}"
         exit 1
         ;;
esac

AC_ARG_WITH([run-dir-variable], [AC_HELP_STRING([--with-run-dir-variable=NAME], [use environment variable NAME for nALFS run dir [[default=ALFS_DIR]]])], [ALFS_VAR="${with_run_dir_variable}"], [ALFS_VAR="ALFS_DIR"])

AC_DEFINE_UNQUOTED([ALFS_VAR], ["${ALFS_VAR}"], [Define environment variable that can hold path to run dir.])

AC_ARG_WITH([run-dir-name], [AC_HELP_STRING([--with-run-dir-name=NAME], [name of directory to create in $HOME when no other run dir specified [[default=.nALFS]]])], [ALFS_DIRECTORY_NAME="${with_run_dir_name}"], [ALFS_DIRECTORY_NAME=".nALFS"])

AC_DEFINE_UNQUOTED([ALFS_DIRECTORY_NAME], ["${ALFS_DIRECTORY_NAME}"], [Define name of run dir in $HOME when not otherwise specified.])

AC_ARG_WITH([dir-mode], [AC_HELP_STRING([--with-dir-mode=MODE], [permissions to apply to created directories [[default=0700]]])], [DIRS_MODE="${with_dir_mode}"], [DIRS_MODE="0700"])

AC_DEFINE_UNQUOTED([DIRS_MODE], [$DIRS_MODE], [Define to set permissions applied to created directories.])

AC_ARG_WITH([rcfile-name], [AC_HELP_STRING([--with-rcfile-name=NAME], [name of configuration file in $HOME [[default=.nALFSrc]]])], [RC_FILE_NAME="${with_rcfile_name}"], [RC_FILE_NAME=".nALFSrc"])

AC_DEFINE_UNQUOTED([RC_FILE_NAME], ["${RC_FILE_NAME}"], [Define to set name of configuration file in $HOME.])

AC_ARG_WITH([libxml2], [AC_HELP_STRING([--with-libxml2=PATH],[search for xml2-config in PATH/bin])], [
case ${with_libxml2} in
     n|no)
        echo "***"
        echo "*** You specified --without-libxml2."
        echo "*** libxml2 is required to build this package."
        exit 1
        ;;
     y|ye|yes)
        AC_PATH_PROG([XML2_CONFIG], [xml2-config], [no])
        ;;
     *)
        AC_PATH_PROG([XML2_CONFIG], [xml2-config], [no], [${with_libxml2}/bin])
        ;;
esac
], [
AC_PATH_PROG([XML2_CONFIG], [xml2-config], [no])
])

if test "${XML2_CONFIG}" != "no"; then
   AC_CHECK_LIB(xml2, xmlParseFile, [XML2_FOUND=yes], [], `${XML2_CONFIG} --libs`)
   if test "${XML2_FOUND}" = "yes"; then
      XML2_VERSION=`${XML2_CONFIG} --version`
      AX_COMPARE_VERSION([${XML2_VERSION}], [ge], [2.6.0], [], [
          echo "***"
          echo "*** The libxml2 installation on this system is version ${XML2_VERSION}."
          echo "*** Version 2.6.0 or above is required to build this package, so the problem"
          echo "*** must be corrected before continuing."
          exit 1
      ])
   else
      echo "***"
      echo "*** The libxml2 installation on this system appears to be broken."
      echo "*** Since libxml2 is required to build this package, the problem"
      echo "*** must be corrected before continuing."
      exit 1
   fi
   AC_DEFINE([HAVE_LIBXML2], [], [Must always be defined, libxml2 is required for building this package.])
   XML2_LIB=`${XML2_CONFIG} --libs | sed -e 's/^-L\(.*\) -lxml2.*$/\1/'`/libxml2.la
   XML2_INCLUDES=`${XML2_CONFIG} --cflags`
   AC_SUBST([XML2_LIB])
   AC_SUBST([XML2_INCLUDES])
   AC_CHECK_LIB(xml2, xmlXIncludeProcess, AC_DEFINE([HAVE_XINCLUDE], [], [Define to enable use of xi:include in profiles.]), [], `${XML2_CONFIG} --libs`)
else
   echo "***"
   echo "*** Can't find xml2-config. Make sure this system has libxml2 installed."
   echo "*** If it does, try using --with-libxml2=PATH."
   echo "*** If it does not, download it from http://xmlsoft.org./"
   exit 1
fi

AC_ARG_WITH([curl], [AC_HELP_STRING([--with-curl=PATH],[search for curl-config in PATH/bin])], [
case ${with_curl} in
     n|no)
        ;;
     y|ye|yes)
        USE_CURL=yes
        AC_PATH_PROG([CURL_CONFIG], [curl-config], [no])
        ;;
     *)
        USE_CURL=yes
        AC_PATH_PROG([CURL_CONFIG], [curl-config], [no], [${with_curl}/bin])
        ;;
esac
], [
AC_PATH_PROG([CURL_CONFIG], [curl-config], [no])
])

if test "${CURL_CONFIG}" != "no"; then
   AC_CHECK_LIB([curl], [curl_global_init], [AC_DEFINE([HAVE_LIBCURL], [], [Define to use libcurl instead of wget for downloading.])], [], [`${CURL_CONFIG} --libs`])
   if test "${ac_cv_lib_curl_curl_global_init}" = "yes"; then
      curl_version=0x`${CURL_CONFIG} --vernum`
      if test $(($curl_version > 0x070a00)) != 0; then
          CURL_LIB=`${CURL_CONFIG} --libs | sed -e 's/^-L\(.*\) -lcurl.*$/\1/'`/libcurl.la
          CURL_INCLUDES=`${CURL_CONFIG} --cflags`
	  AC_SUBST([CURL_LIB])
	  AC_SUBST([CURL_INCLUDES])
      else
          echo "***"
	  echo "*** The libcurl on this system is an older version than 7.10.0."
	  echo "*** Either install a newer version, or run configure without"
	  echo "*** including --with-curl."
	  exit 1
      fi
   else
      echo "***"
      echo "*** The libcurl installation on this system appears to be broken."
      echo "*** Either correct the installation, or run configure without"
      echo "*** including --with-curl."
      exit 1
   fi
elif test "${USE_CURL}" = "yes"; then
   echo "***"
   echo "*** Can't find curl-config. Make sure this system has curl installed,"
   echo "*** or run configure without including --with-curl."
   exit 1
fi

AC_ARG_WITH([ssl], [AC_HELP_STRING([--with-ssl=PATH],[use ssl files in PATH (ssl is needed for checking non-MD5 digests in <unpack> and <download> elements)])], [
case ${with_ssl} in
     n|no)
        ;;
     y|ye|yes)
        USE_SSL=yes
        ;;
     *)
        USE_SSL=yes
        SSL_DIR="${with_ssl}"
        ;;
esac
])

if test "${USE_SSL}" = "yes"; then
   AC_CHECK_LIB([ssl], [OpenSSL_add_all_digests], [AC_DEFINE([HAVE_LIBSSL], [], [Define to indicate the SSL libraries should be used for verifying non-MD5 digests.])], [], [-L${SSL_DIR}/lib -lcrypto])
   if test "${ac_cv_lib_ssl_OpenSSL_add_all_digests}" = "yes"; then
      SSL_LIB="-lssl -lcrypto"
      if test "${SSL_DIR}" != ""; then
         SSL_LIB="-L${SSL_DIR}/lib -Wl,--rpath,${SSL_DIR}/lib $SSL_LIB"
         SSL_INCLUDES="-I${SSL_DIR}/include"
         AC_SUBST([SSL_INCLUDES])
      fi
      AC_SUBST([SSL_LIB])
   else
      echo "***"
      echo "*** The ssl installation on this system appears to be broken."
      echo "*** Either correct the installation, or run configure without"
      echo "*** including --with-ssl."
      exit 1
   fi
fi

AC_CONFIG_FILES([Makefile doc/Makefile])
EOF

for syntax in ${all_syntaxes}; do
    case ${syntax} in
	2_0)
	    ;;
	*)
	    if test x"${default_syntaxes}" != x""; then
		default_syntaxes=${default_syntaxes},
	    fi
	    default_syntaxes=${default_syntaxes}${syntax/_/.}
	    ;;
    esac
done

cat << EOF
AC_ARG_ENABLE([syntax],
        AC_HELP_STRING([--enable-syntax=(VERSIONS|all)], [enable only specific ALFS profile syntax versions to be built [[default=${default_syntaxes}]]]),
        [],
        [enable_syntax=${default_syntaxes}])
EOF

for syntax in ${all_syntaxes}; do
	echo syntax_${syntax}=0
done

cat << "EOF"
save_ifs="${IFS}"; IFS="${IFS}${PATH_SEPARATOR},"
for syntax_ver in ${enable_syntax}; do
    case ${syntax_ver} in
    all)
EOF

for syntax in ${all_syntaxes}; do
	echo syntax_${syntax}=1
done

echo ";;"

for syntax in ${all_syntaxes}; do
	cat << EOF
	${syntax/_/.})
	    syntax_${syntax}=1
	    ;;
EOF
done

cat << "EOF"
    *)
        echo "***"
        echo "*** Unknown syntax version supplied: ${syntax_ver}"
        exit 1
        ;;
    esac
done
IFS="${save_ifs}"
EOF

for syntax in ${all_syntaxes}; do
	cat << EOF
AC_DEFINE_UNQUOTED([HANDLER_SYNTAX_${syntax}], [\${syntax_${syntax}}], [Define to 1 if ALFS ${syntax/_/.} profile syntax handlers should be built.])
EOF
done

for handler in ${all_handlers}; do
    echo -n "AM_CONDITIONAL([HANDLER_$handler], [test \$(("
    eval "syntax_list=\${${handler}_syntaxes}"
    for syntax in ${syntax_list}; do
	echo -n "syntax_${syntax} + "
    done
    echo "0)) -gt 0])"
done

echo AC_OUTPUT
