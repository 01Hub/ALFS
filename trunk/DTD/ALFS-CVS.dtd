<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
       ALFS :    Document Type Definition
       Version : CVS
       Author:   V. Dzuba
       Updates:  Kevin P. Fleming
       Date:     March 5, 2004

       The current version of the DTD is available at:
             http://www.linuxfromscratch.org/alfs/downloads/stable

       The current version of its documentation is available at:
             http://www.linuxfromscratch.org/alfs/view/dtd

       This DTD is published under both BSD and GNU licenses.
-->

<!ENTITY lt     "&#38;#60;"> 
<!ENTITY gt     "&#62;"> 
<!ENTITY amp    "&#38;#38;"> 
<!ENTITY apos   "&#39;"> 
<!ENTITY quot   "&#34;"> 

<!ENTITY % ops "configure | copy | download | execute | if | link | make | mkdir | move | ownership | patch | permissions | remove | search_replace | stage | textdump | unpack">
<!ENTITY % tests "test | package-built | package-version | and | or | not">

<!ELEMENT alfs           ((%ops; | include | package | packagegroup)+)>
<!ATTLIST alfs
          base           CDATA #IMPLIED
          version        CDATA #FIXED "3.2"
	  xml:base	 CDATA #IMPLIED
	  xmlns:xi	 CDATA #IMPLIED>

<!ELEMENT and            ((%tests;)+)>

<!ELEMENT archive        (#PCDATA)>

<!ELEMENT base           (#PCDATA)>

<!ELEMENT configure      ((param | prefix)*)>
<!ATTLIST configure
          base           CDATA #IMPLIED
          command        CDATA #IMPLIED>

<!ELEMENT content        (#PCDATA)>

<!ELEMENT copy           (option*, source+, destination)>
<!ATTLIST copy
          base           CDATA #IMPLIED>

<!ELEMENT description    (para | list)*>

<!ELEMENT destination    (#PCDATA)>

<!ELEMENT digest         (#PCDATA)>
<!ATTLIST digest         
          type           CDATA     "md5">

<!ELEMENT download       (file, url*, digest?)>
<!ATTLIST download
          base           CDATA #IMPLIED>

<!ELEMENT else           (stageinfo?, (%ops;)*)>

<!ELEMENT execute        (((param | prefix)*) | content)>
<!ATTLIST execute
          base           CDATA #IMPLIED
          command        CDATA #IMPLIED>

<!ELEMENT environment    (variable+)>

<!ELEMENT file           (#PCDATA)>

<!ELEMENT find           (#PCDATA)>

<!ELEMENT if		 ((%tests;)+, then?, else?)

<!ELEMENT item           (#PCDATA)>

<!ELEMENT include        EMPTY>
<!ATTLIST include
          href           CDATA #REQUIRED>

<!ELEMENT link           (option?, target+, name)>
<!ATTLIST link
          base           CDATA #IMPLIED
	  type           (hard | symbolic) "symbolic">

<!ELEMENT list           (item | list)+>
<!ATTLIST list
          type           (bullet | number) "bullet">

<!ELEMENT make           ((param | prefix)*)>
<!ATTLIST make
          base           CDATA #IMPLIED>

<!ELEMENT mkdir          (option?, name+, permissions?)>
<!ATTLIST mkdir
          base           CDATA #IMPLIED>
          
<!ELEMENT move           (option?, source+, destination)>
<!ATTLIST move
          base           CDATA #IMPLIED>

<!ELEMENT name           (#PCDATA)>

<!ELEMENT not            (%tests;)>

<!ELEMENT option         (#PCDATA)>

<!ELEMENT or             ((%tests;)+)>

<!ELEMENT ownership      (option?, name+)>
<!ATTLIST ownership
          base           CDATA #IMPLIED
          user           CDATA #IMPLIED
	  group          CDATA #IMPLIED>
          
<!ELEMENT package        (packageinfo?, stage+)>
<!ATTLIST package
          name           CDATA #REQUIRED
          version        CDATA #REQUIRED>

<!ELEMENT packageinfo    (description?, requires*, utilizes*)>

<!ELEMENT packagegroup   (package+)>

<!ELEMENT para           (#PCDATA)>

<!ELEMENT param          (#PCDATA)>

<!ELEMENT patch          (digest?, reference*, file, (param | prefix)*)>
<!ATTLIST patch
          base           CDATA #IMPLIED
          mode           (forward | reverse) "forward"
          path_strip     CDATA #IMPLIED>

<!ELEMENT permissions    (option?, name*)>
<!ATTLIST permissions
          base           CDATA #IMPLIED
          mode           CDATA #REQUIRED>

<!ELEMENT prefix         (#PCDATA)>

<!ELEMENT reference      (#PCDATA)>

<!ELEMENT remove         (file+)>
<!ATTLIST remove
          base           CDATA #IMPLIED>

<!ELEMENT replace        (#PCDATA)>

<!ELEMENT requires       (name, version*)>

<!ELEMENT root           (#PCDATA)>

<!ELEMENT search_replace (file, find, replace)>
<!ATTLIST search_replace
          base           CDATA #IMPLIED
          mode           (append | replace | prepend) "replace"
          global         (yes | no) "yes">

<!ELEMENT shell          (#PCDATA)>

<!ELEMENT stage          (stageinfo?, (%ops; | package | packagegroup)+)>
<!ATTLIST stage
          name           CDATA #IMPLIED>
          
<!ELEMENT source         (#PCDATA)>

<!ELEMENT stageinfo      (root?, user?, environment?, base?, shell?)>

<!ELEMENT target         (#PCDATA)>

<!ELEMENT test           (#PCDATA)>

<!ELEMENT textdump       (file, content)>
<!ATTLIST textdump
          base           CDATA #IMPLIED
	  mode           (append | overwrite) "overwrite">

<!ELEMENT then           (stageinfo?, (%ops;)*)>

<!ELEMENT unpack         (digest?, reference*, archive)>
<!ATTLIST unpack
          base           CDATA #IMPLIED>

<!ELEMENT url            (#PCDATA)>

<!ELEMENT user           (#PCDATA)>

<!ELEMENT utilizes       (name, version*)>

<!ELEMENT variable       (#PCDATA)>
<!ATTLIST variable
          name           CDATA #REQUIRED
	  mode           (append | prepend) #IMPLIED>

<!ELEMENT version        (#PCDATA)>
<!ATTLIST version
          condition      (eq | ne | gt | ge | lt | le) #REQUIRED>
