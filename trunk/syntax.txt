Proposed official syntax for ALFS:
==================================

    o This will shortly be moved into Docbook XML for the ALFS 1.0 rleease,
      untill then, this will have todo ;)

    o We could perhaps move <command /> to an attribute.
      Not sure how much of a good idea that is however.

    o Using <parameter/> instead of <option /> for configure/make/execute.
      Needs more though.  Id prefer to <option /> stays with configure and
      friends then just moving over to copy and friends.  Perhaps we can find
      another name for them instead.. or just leave it as-is and say stfu ;)

    o Because the usage of soft links (symbolic) are so popular, we _strongly_
      suggest that anyone writting an ALFS implementation leave them as
      default.  One less thing for profile writters having to keep track of.

      We could problably set it as a default with a DTD, but i doubt all
      implementations will even follow a DTD, so i just want to mention that
      here.


Configure:
----------

    <configure base="">
	<command />
        <option />
    </configure>

eg;

    <configure base="/tmp/sed-3.02">
	<option>--prefix=/tmp/sed</option>
    </configure>


Make:
-----

    <make base="">
	<option />
    </make>

eg;

    <make base="/tmp/sed-3.02">
	<option>install</option>
    </make>


Execute:
--------

    <execute base="">
	<command />
        <option />
    </execute>

eg;

    <execute base="/tmp">
	<command>touch</command>
	<option>foobar.txt</option>
    </execute>


Mkdir:
------

    <mkdir base="">
	<option />
        <name />
    </mkdir>

eg;

    <mkdir base="/tmp">
	<name>foo</name>
	<name>bar</name>
    </mkdir>


Copy:
-----

    <copy base="">
	<option />
        <source />
	<destination />
    </copy>

eg;

    <copy base="/tmp">
	<source>foo</source>
	<destination>bar</destination>
    </copy>


Move:
-----

    <move base="">
	<option />
        <source />
	<destination />
    </move>

eg;

    <move base="/tmp">
	<source>foo</source>
	<destination>bar</destination>
    </move>


Link:
-----

    <link type="soft|hard" base="">
	<source />
        <destination />
    </link>

eg;

    <link base="/tmp">
	<source>foo</source>
	<destination>bar</destination>
    </link>


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Generic Package:
----------------

<package>
    <info>
        <name>[package name]</name>
        <version>[package version]</version>
    </info>

    ...

</package>

I've presently left out the prebuild/build/postbuild (setup/build/install)
untill we pick the best way to deal this this.  Allthough it would problably
be best to leave the use of them optional anyways. (ala stage problably)


Generic Profile:
----------------

<?xml version="1.0" encoding="iso-8859-1" ?>

<alfs>

    ... use of generic tags and packages ...

</alfs>

Entities are totally optional.  However they can be quite usefull.
